{"version":3,"sources":["components/Topbar/Topbar.js","components/Footer/Footer.js","components/Loading/Loading.js","components/Sidebar/Sidebar.js","core/api.js","components/ViewItemModal/ViewItemModal.js","components/ResponsiveTable/ResponsiveTable.js","components/Error/Error.js","components/CustomInput/CustomInput.js","pages/Home/home.js","pages/Profile/profile.js","pages/Mobility/mobility.js","pages/Bookmarks/bookmarks.js","core/taxModel.js","pages/Tax/tax.js","core/helpers/taxCalculatorService.js","auth/protected-route.js","App.js","auth/auth0-component.js","index.js"],"names":["Topbar","props","useAuth0","isAuthenticated","loginWithRedirect","logout","user","useState","currentLocation","location","pathname","slice","currentPage","setCurrentPage","history","useHistory","className","Navbar","expand","collapseOnSelect","onSelect","selected","navigateTo","push","returnTo","window","origin","Toggle","aria-controls","Brand","href","target","toLowerCase","Nav","Text","name","src","picture","alt","Collapse","id","config","map","item","index","show","Link","eventKey","pageName","Footer","Loading","Spinner","animation","role","Sidebar","expanded","setExpanded","onClickOutside","onToggle","defaultSelected","toString","substring","style","color","icon","MOBILITY_SEARCH_PLATE","ViewItemModal","Modal","size","aria-labelledby","centered","data","title","Header","closeButton","Title","Body","content","author","Button","onClick","onHide","ResponsiveTable","showModal","setShowModal","setIndex","getIcon","type","faEye","faLink","faHeart","buildIconCell","url","variant","rel","length","Card","columns","col","Row","Col","text","dataField","startsWith","Error","backTo","Container","sm","faArrowLeft","CustomInput","placeholder","field","method","searchNewsHandler","searchByString","params","q","country","apiKey","axios","get","then","articles","filterString","searchingState","theNews","InputGroup","FormControl","value","disabled","onKeyPress","event","key","onChange","e","currentTarget","charAt","trim","Append","parentElement","children","faTimes","faSearch","Home","setConfig","iconIndex","iconColor","iconConfig","setIconConfig","hasError","setHasError","innerWidth","width","setWidth","useContext","HomeContext","favs","setFavs","headerStyle","formatter","cell","contact","transformDate","publishedAt","iconFav","filter","dateString","Date","toLocaleDateString","undefined","year","month","day","useEffect","addEventListener","md","block","blur","catch","error","keyField","bootstrap4","condensed","loading","pagination","paginationFactory","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","hideSizePerPage","hidePageListOnlyOnePage","showTotal","noDataIndication","Profile","email","Mobility","password","token","auth","setAuth","theData","imageUrl","plateId","image_url","authHeader","JSON","parse","localStorage","getItem","auth_token","Authorization","callSearchEngine","cx","items","Object","keys","pagemap","cse_image","plate","headers","put","vehicle","getUpdatedVehicle","searchVehiclesHandler","kenteken","merk","handelsbenaming","Form","Group","controlId","aria-label","userCredentials","post","response","setItem","stringify","removeItem","Bookmarks","rows","i","fav","favIndex","itemIndex","schemaCollection","allowance","basicIncomeMaxLimit","highIncomeMaxLimit","rates","allowanceLimit","insurance","lowLimit","lowRate","highLimit","highRate","Tax","taxes","insuranceTaxes","income","initialAllowance","taxSplits","insuranceSplits","calculatedData","setCalculatedData","amount","userData","setUserData","showFirstScreen","setShowFirstScreen","currency","displayConfig","label","customClass","navigationButton","direction","querySelector","Fade","in","Control","string","as","Number","schema","output","getSplits","diff","splits","reverse","breakdownIncome","reduce","accumulator","currentValue","rate","calculateTax","toFixed","displayType","thousandSeparator","prefix","faArrowRight","ProtectedRoute","component","args","withAuthenticationRequired","onRedirecting","createContext","SidebarContext","setFavouritesReducer","state","setCurrentLocationReducer","App","isLoading","useLocation","useReducer","setCurrentLocation","navigationConfig","faHome","faSpaceShuttle","faUser","faBookmark","faCalculator","faSignOutAlt","faSignInAlt","Provider","path","exact","render","to","Auth0Component","audience","process","REACT_APP_AUTH0_AUDIENCE","domain","clientId","redirectUri","onRedirectCallback","appState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4dce51ec.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport \"./Topbar.scss\";\r\n\r\nconst Topbar = (props) => {\r\n    const {isAuthenticated, loginWithRedirect, logout, user} = useAuth0();\r\n    const [currentPage, setCurrentPage] = useState(props.currentLocation || props.location.pathname.slice(1) || \"Home\");\r\n    const history = useHistory();\r\n    return (\r\n    <div className=\"nav-container\">\r\n        <Navbar expand=\"lg\"\r\n                collapseOnSelect=\"true\"\r\n                className=\"custom-nav\"\r\n                onSelect={(selected) => {\r\n                if( selected !== 'log-in-out') {\r\n                    const navigateTo = '/' + selected;\r\n                    setCurrentPage(selected);\r\n                    if (props.location.pathname !== navigateTo) {\r\n                        history.push(navigateTo);\r\n                    }\r\n                }else{\r\n                    if(isAuthenticated) {\r\n                        logout({\r\n                            returnTo: window.location.origin,\r\n                        })\r\n                    } else {\r\n                        loginWithRedirect();\r\n                    }\r\n                }\r\n            }}>\r\n\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Brand className=\"app-name\">\r\n                <a href=\"https://github.com/flaviuspilca/react-play\" target=\"_blanc\"><span className=\"image-logo\"></span></a>\r\n                <span className=\"app-title\"><h3>{currentPage === props.location.pathname.slice(1).toLowerCase() ? currentPage : props.currentLocation || \"Home\"} page</h3></span>\r\n            </Navbar.Brand>\r\n\r\n            <Nav className=\"ml-auto\">\r\n                <Navbar.Text>\r\n                    <h3>\r\n                        {isAuthenticated ? \"Welcome \" + user.name : \"Welcome! You are not logged in!\"}\r\n                    </h3>\r\n                </Navbar.Text>\r\n            </Nav>\r\n            {isAuthenticated && <Navbar.Brand>\r\n                <img\r\n                    src={user.picture}\r\n                    alt=\"Profile\"\r\n                    className=\"rounded-circle\"\r\n                />\r\n            </Navbar.Brand>}\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\r\n                <Nav className=\"mr-auto\">\r\n                    {\r\n                        props.config.map((item, index) => (\r\n                            item.show ? <Nav.Link\r\n                                key={index}\r\n                                href=\"#\"\r\n                                eventKey={item.pageName.toLowerCase()}\r\n                            >\r\n                                <h3>{item.pageName.toLowerCase() === \"log-in-out\" ?  (isAuthenticated ? \"Log Out\" : \"Log In\") : item.pageName}</h3>\r\n                            </Nav.Link> : \"\"\r\n                        ))\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer-container container-fluid flex-grow-0 flex-shrink-1\">Work by Flavius</footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Loading = () => (\r\n    <div className=\"d-flex justify-content-center loading-container align-items-center\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, {useState, useContext} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport SideNav, {NavItem, NavIcon, NavText} from \"@trendmicro/react-sidenav\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport ClickOutside from \"react-click-outside\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport {SidebarContext} from \"../../App\";\r\nimport \"./Sidebar.scss\";\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    const {isAuthenticated, loginWithRedirect, logout} = useAuth0();\r\n    const history = useHistory();\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    return(\r\n        <div className=\"sidebar-container\">\r\n            <ClickOutside\r\n                onClickOutside={() => {\r\n                    setExpanded(false);\r\n                }}\r\n            >\r\n                <SideNav\r\n                    expanded={expanded}\r\n                    onToggle={(expanded) => {\r\n                        setExpanded(expanded);\r\n                    }}\r\n                    onSelect={(selected) => {\r\n                        if( selected !== 'log-in-out') {\r\n                            const navigateTo = '/' + selected;\r\n                            if (props.location.pathname !== navigateTo) {\r\n                                history.push(navigateTo);\r\n                            }\r\n                        }else{\r\n                            if(isAuthenticated) {\r\n                                logout({\r\n                                    returnTo: window.location.origin,\r\n                                })\r\n                            } else {\r\n                                loginWithRedirect();\r\n                            }\r\n                        }\r\n                    }}\r\n                    className=\"sidebar-list\"\r\n                >\r\n                    <SideNav.Toggle />\r\n                    <SideNav.Nav defaultSelected={props.location.pathname.toString().substring(1) || \"home\"}>\r\n                        {\r\n                            props.config.map((item, index)=>(\r\n                                item.show ? <NavItem\r\n                                    key={index}\r\n                                    eventKey={item.pageName.toLowerCase()}\r\n                                    className={item.pageName.toLowerCase() === \"log-in-out\" ? \"login-button\":\"\"}\r\n                                >\r\n                                    <NavIcon>\r\n                                        <FontAwesomeIcon style={{color: '#FDEDEC'}} icon={item.icon} />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        {item.pageName.toLowerCase() === \"log-in-out\" ?  (isAuthenticated ? \"Log Out\" : \"Log In\") : item.pageName}\r\n                                    </NavText>\r\n                                </NavItem> : \"\"\r\n                            ))\r\n                        }\r\n                    </SideNav.Nav>\r\n                </SideNav>\r\n            </ClickOutside>\r\n        </div>);\r\n};\r\n\r\nexport default Sidebar;","// usually endpoints are different and it's a good practice to create variables for each type of API\r\n// because of this I went for this approach even if the two APIs are the same\r\nexport const FETCH_API = \"https://newsapi.org/v2/top-headlines\";\r\nexport const SEARCH_API = \"https://newsapi.org/v2/top-headlines\";\r\n\r\nexport const MOBILITY_LOGIN = \"https://arcane-scrubland-64110.herokuapp.com/auth/login\";\r\nexport const MOBILITY_SEARCH = \" https://opendata.rdw.nl/resource/m9d7-ebf2.json\";\r\nexport const MOBILITY_SEARCH_PLATE = \"https://arcane-scrubland-64110.herokuapp.com/vehicles/search/\";\r\nexport const MOBILITY_UPDATE = \"https://arcane-scrubland-64110.herokuapp.com/vehicles/\";","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport \"./ViewItemModal.scss\";\r\n\r\nconst ViewItemModal = (props) => {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            {props.data.title && <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {props.data.title}\r\n                </Modal.Title>\r\n            </Modal.Header>}\r\n            <Modal.Body className=\"text-center\">\r\n                <span>{props.data.content}</span>\r\n                {props.data.author && <span className=\"text-left font-italic\">by: {props.data.author}</span>}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button size={\"sm\"} onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ViewItemModal;","import React, {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLink, faEye, faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Card, Row, Col, Button} from \"react-bootstrap\";\r\nimport ViewItemModal from \"../../components/ViewItemModal/ViewItemModal\";\r\nimport \"./ResponsiveTable.scss\";\r\n\r\n\r\nconst ResponsiveTable = (props) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const getIcon = (type) => {\r\n        if( type === \"iconView\" ) return faEye;\r\n        if( type === \"iconUrl\" ) return faLink;\r\n        if( type === \"iconFav\" ) return faHeart;\r\n    };\r\n\r\n    const buildIconCell = (type, url, index) => {\r\n        return(\r\n            <>\r\n                {type === 'iconView' && <Button variant=\"link\" size=\"sm\" onClick={() => {\r\n                    setIndex(index);\r\n                    setShowModal(true)\r\n                }}>\r\n                    <FontAwesomeIcon style={{color: '#000'}} icon={getIcon(type)} />\r\n                </Button>}\r\n                {type === 'iconUrl' && <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon style={{color: \"#000\"}} icon={getIcon(type)} />\r\n                </a>}\r\n                {type === 'iconFav' && <Button variant=\"link\" size=\"sm\" onClick={() => {\r\n\r\n                }}>\r\n                    <FontAwesomeIcon style={{color: '#000'}} icon={getIcon(type)} />\r\n                </Button>}\r\n            </>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"responsive-table-container\">\r\n            {props.data.length > 0 && props.data.map(item => {\r\n                return(\r\n                    <Card key={item.id}>\r\n                        <Card.Body>\r\n                            {\r\n                                props.columns.map((col, index) => {\r\n                                    return(\r\n                                        <Row key={index}>\r\n                                            <Col className=\"col-4\"><span className=\"font-weight-bold\">{col.text}</span></Col>\r\n                                            <Col className=\"col-8\">{col.dataField.startsWith(\"icon\") ? buildIconCell(col.dataField, item[col.dataField], item.id) : item[col.dataField]}</Col>\r\n                                        </Row>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n            })}\r\n            {props.data.length > 0 && (<div>Total: {props.data.length} news</div>)}\r\n            {props.data.length === 0 && (\r\n                <Card key=\"0\">\r\n                    <Card.Body>\r\n                        Sorry! We found no data.\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n\r\n            {props.data.length > 0 && <ViewItemModal\r\n                index={index}\r\n                data={props.data[index]}\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResponsiveTable;\r\n","import React from \"react\";\r\nimport {Container, Card, Row, Col} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Error = (props) => {\r\n    const backTo = \"/\"+props.origin;\r\n\r\n    return(\r\n        <div className=\"error-component-container\">\r\n            <section className=\"content\">\r\n                <Container>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Row>\r\n                                <Col>\r\n                                    Ooops!\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    It seems there is an internal error. Please double check if the inputs are in the\r\n                                    right format.\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm={3}>\r\n                                    <a href={backTo} className=\"text-decoration-none text-muted\">\r\n                                        <FontAwesomeIcon style={{color: '#000'}} icon={faArrowLeft} /> Go back\r\n                                    </a>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {SEARCH_API} from \"../../core/api\";\r\nimport {InputGroup, FormControl, Button} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CustomInput.scss\";\r\n\r\n\r\n\r\nconst CustomInput = (props) => {\r\n    const {placeholder, field, method, name} = props;\r\n    const searchNews = (params) => {\r\n        axios\r\n            .get(SEARCH_API, {params})\r\n            .then(({data}) => {\r\n                data.articles.map((item, index) => (item[\"id\"] = index));\r\n                method({\r\n                    country: field.country,\r\n                    apiKey: field.apiKey,\r\n                    filterString: params.q || '',\r\n                    searchingState: field.searchingState,\r\n                    theNews: data.articles\r\n                });\r\n            })\r\n    };\r\n\r\n    const searchNewsHandler = (searchByString) => {\r\n        searchNews(searchByString ? {q : searchByString, country : field.country, apiKey : field.apiKey} : {country : field.country, apiKey : field.apiKey})\r\n    };\r\n\r\n    return(\r\n        <div className=\"custom-input-container\">\r\n            <InputGroup className=\"mt-0\">\r\n                <FormControl\r\n                    placeholder={placeholder}\r\n                    value={field[name]}\r\n                    disabled={name === \"filterString\" && !field.searchingState}\r\n                    className={name === \"filterString\" && !field.searchingState ? \"disabled-input\" : \"\"}\r\n                    onKeyPress={event => {\r\n                        if (event.key === \"Enter\" && field.filterString.length>1) {\r\n                            searchNewsHandler(field.filterString)\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        if( e.currentTarget.value.charAt(0) === ' ' ){\r\n                            e.target.value = e.target.value.trim();\r\n                        }\r\n                        method({\r\n                            country: name===\"country\" ? e.target.value : field.country,\r\n                            apiKey: name===\"apiKey\" ? e.target.value : field.apiKey,\r\n                            filterString: name===\"filterString\" ? e.target.value : '',\r\n                            searchingState: field.searchingState,\r\n                            theNews: field.theNews\r\n                        });\r\n                    }}\r\n                />\r\n                {field[name].length>0 && <InputGroup.Append>\r\n                    <Button\r\n                        variant=\"light\"\r\n                        className=\"clean-form-btn\"\r\n                        onClick={(e) => {\r\n                            e.currentTarget.parentElement.children[0].value = '';\r\n                            method({\r\n                                country: name === \"country\" ? '' : field.country,\r\n                                apiKey: name === \"apiKey\" ? '' : field.apiKey,\r\n                                filterString: '',\r\n                                searchingState: name === \"filterString\" ? field.searchingState: false,\r\n                                theNews: []\r\n                            });\r\n                            if( name === \"filterString\" ) searchNewsHandler();\r\n                        }}>\r\n                        <FontAwesomeIcon style={{color: '#000'}} icon={faTimes} />\r\n                    </Button>\r\n                </InputGroup.Append>}\r\n                {field.filterString.length>0 && name === \"filterString\" && <InputGroup.Append>\r\n                    <Button\r\n                        variant=\"light\"\r\n                        disabled={!field[name]}\r\n                        className={!field[name] ? 'disabled-input' : ''}\r\n                        onClick={() => {\r\n                            searchNewsHandler(field.filterString)\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon style={{color: '#000'}} icon={faSearch} />\r\n                    </Button>\r\n                </InputGroup.Append>}\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CustomInput;","import React, {useEffect, useState, useContext} from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport axios from \"axios\";\r\nimport {FETCH_API} from \"../../core/api\";\r\nimport {Container, Card, Row, Col, Button} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLink, faEye, faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport ResponsiveTable from \"../../components/ResponsiveTable/ResponsiveTable\";\r\nimport Error from \"../../components/Error/Error\";\r\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\r\nimport ViewItemModal from \"../../components/ViewItemModal/ViewItemModal\";\r\nimport {HomeContext} from \"../../App\";\r\nimport \"./home.scss\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const [config, setConfig] = useState({country: \"\", apiKey: \"\", filterString: \"\", searchingState: false, theNews: []});\r\n    const [iconConfig, setIconConfig] = useState({iconIndex: 0, iconColor: \"#000\"});\r\n    const [hasError, setHasError] = useState(false);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [index, setIndex] = useState(0);\r\n    const {favs, setFavs} = useContext(HomeContext);\r\n    const breakpoint = 768;\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'title',\r\n            text: 'Title'\r\n        },\r\n        {\r\n            dataField: 'author',\r\n            text: 'Author',\r\n            headerStyle: {width: '200px'}\r\n        },\r\n        {\r\n            dataField: 'publishedAt',\r\n            text: 'Publication date',\r\n            headerStyle: {width: '120px'},\r\n            formatter: (cell, contact) => {\r\n                return (\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        {transformDate(contact.publishedAt)}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: 'iconView',\r\n            text: 'Quick preview',\r\n            headerStyle: {width: '100px'},\r\n            formatter: (cell, contact) => {\r\n                return (\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <Button variant=\"link\" size=\"sm\" onClick={() => {\r\n                            setIndex(contact.id);\r\n                            setShowModal(true)\r\n                        }}>\r\n                            <FontAwesomeIcon style={{color: '#000'}} icon={faEye} />\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: 'iconUrl',\r\n            text: 'Url',\r\n            headerStyle: {width: '50px'},\r\n            formatter: (cell, contact) => {\r\n                return (\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <a href={contact.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <FontAwesomeIcon style={{color: '#000'}} icon={faLink} />\r\n                        </a>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataField: 'iconFav',\r\n            text: 'Set as favourite',\r\n            headerStyle: {width: '70px'},\r\n            formatter: (cell, contact) => {\r\n                return (\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <Button variant=\"link\" size=\"sm\" onClick={() => {\r\n                            contact.iconFav = !contact.iconFav;\r\n                            setIconConfig({iconIndex: contact.id, iconColor: contact.iconFav ? \"red\":\"#000\"});\r\n                            if( favs.filter((item)=>(\r\n                                item.id === contact.id\r\n                            )).length === 0 ){\r\n                                setFavs(contact);\r\n                            }\r\n                        }}>\r\n                            <FontAwesomeIcon\r\n                                style={{color: contact.iconFav && contact.id === iconConfig.iconIndex ? iconConfig.iconColor : \"#000\"}}\r\n                                icon={faHeart}\r\n                            />\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const paginationOptions = {\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: '>>',\r\n        firstPageText: '<<',\r\n        nextPageText: '>',\r\n        prePageText: '<',\r\n        hideSizePerPage: true,\r\n        hidePageListOnlyOnePage: true,\r\n        showTotal: true\r\n    };\r\n\r\n    const transformDate = (dateString) => {\r\n        const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n        return new Date(dateString).toLocaleDateString(undefined, options)\r\n    };\r\n\r\n    const getNews = (params) => {\r\n        setConfig({\r\n            country: config.country,\r\n            apiKey: config.apiKey,\r\n            filterString: \"\",\r\n            searchingState: config.searchingState,\r\n            theNews: []\r\n        });\r\n        axios\r\n            .get(FETCH_API, {params})\r\n            .then(({data}) => {\r\n                data.articles.map((item, index) => {\r\n                    item[\"id\"] = index;\r\n                    item[\"iconFav\"] = false;\r\n                    return item;\r\n                });\r\n                setConfig({\r\n                    country: config.country,\r\n                    apiKey: config.apiKey,\r\n                    filterString: '',\r\n                    searchingState: true,\r\n                    theNews: data.articles\r\n                });\r\n            })\r\n            .catch(error => {\r\n                setHasError(true);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    }, []);\r\n\r\n\r\n    return(\r\n        <div className=\"home-page-container\">\r\n            {!hasError && <section className=\"content\">\r\n                <Container>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Row>\r\n                                <Col><h3>Headlines today</h3></Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>In order to get the news, please fill in the below inputs</h6>\r\n                                    <p>You can use the below values:</p>\r\n                                    <p>Country: de</p>\r\n                                    <p>ApiKey: cfc7d6168c29479ba18693c171134230</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <CustomInput\r\n                                        placeholder=\"Country...\"\r\n                                        field={config}\r\n                                        method={setConfig}\r\n                                        name={\"country\"}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <CustomInput\r\n                                        placeholder=\"ApiKey...\"\r\n                                        field={config}\r\n                                        method={setConfig}\r\n                                        name={\"apiKey\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button\r\n                                        block\r\n                                        variant=\"primary\"\r\n                                        disabled={!config.country || !config.apiKey}\r\n                                        className={!config.country || !config.apiKey ? 'custom-button disabled-input' : 'custom-button'}\r\n                                        onClick={(e) => {\r\n                                            try {\r\n                                                if( !config.country || !config.apiKey ){\r\n                                                    throw new Error(\"It seems there is an internal error. Please double check if the inputs are in the right format.\");\r\n                                                }\r\n                                                e.currentTarget.parentElement.children[0].blur();\r\n                                                getNews({country : config.country, apiKey : config.apiKey});\r\n                                            } catch {\r\n                                                setHasError(true);\r\n                                            }\r\n                                        }}\r\n                                    >Get all headlines</Button>\r\n                                </Col>\r\n                            </Row>\r\n                            {config.searchingState && <Row>\r\n                                <Col>\r\n                                    <CustomInput\r\n                                        placeholder=\"Search for headlines...\"\r\n                                        field={config}\r\n                                        method={setConfig}\r\n                                        name={\"filterString\"}\r\n                                    />\r\n                                </Col>\r\n                            </Row>}\r\n                        </Card.Header>\r\n                        {config.searchingState && <Card.Body>\r\n                            { width > breakpoint ? <BootstrapTable\r\n                                keyField=\"id\"\r\n                                bootstrap4\r\n                                condensed\r\n                                data={config.theNews}\r\n                                columns={columns}\r\n                                loading={true}\r\n                                pagination={paginationFactory(paginationOptions)}\r\n                                noDataIndication={<div>Sorry! We found no data.</div>}\r\n                            /> : <ResponsiveTable\r\n                                data={config.theNews}\r\n                                columns={columns}\r\n                                filterString={config.filterString}\r\n                                params={{country : config.country, apiKey : config.apiKey}}\r\n                            />}\r\n                        </Card.Body>}\r\n                    </Card>\r\n                </Container>\r\n            </section>}\r\n            {hasError && <Error origin=\"home\"/>}\r\n\r\n            {config.theNews.length > 0 && <ViewItemModal\r\n                index={index}\r\n                data={config.theNews[index]}\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n            />}\r\n\r\n        </div>)\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {Container, Card, Row, Col} from \"react-bootstrap\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport \"./profile.scss\";\r\n\r\n\r\nconst Profile = () => {\r\n  const {user} = useAuth0();\r\n\r\n  return (\r\n    <div className=\"profile-page-container\">\r\n        <section className=\"content\">\r\n            <Container>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col>\r\n                            <img\r\n                                src={user.picture}\r\n                                alt=\"Profile\"\r\n                                className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\r\n                            />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col>\r\n                                Username: <h3>{user.name}</h3>\r\n                                Email: <h5>{user.email}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {MOBILITY_LOGIN, MOBILITY_SEARCH, MOBILITY_SEARCH_PLATE, MOBILITY_UPDATE} from \"../../core/api\";\r\nimport {Container, Card, Row, Col, Form, InputGroup, FormControl, Button} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLink, faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ResponsiveTable from \"../../components/ResponsiveTable/ResponsiveTable\";\r\nimport Error from \"../../components/Error/Error\";\r\nimport \"./mobility.scss\";\r\n\r\n\r\nconst Mobility = () => {\r\n    const [auth, setAuth] = useState({email: \"\", password: \"\", token: \"\"});\r\n    const [hasError, setHasError] = useState(false);\r\n    const [config, setConfig] = useState({theData: [], filterString: \"\", searchingState: false});\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const breakpoint = 768;\r\n    let imageUrl = \"\";\r\n    let plateId = \"\";\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'license_plate',\r\n            text: 'Licence Plate'\r\n        },\r\n        {\r\n            dataField: 'merk',\r\n            text: 'Brand'\r\n        },\r\n        {\r\n            dataField: 'handelsbenaming',\r\n            text: 'Commercial Name'\r\n        },\r\n        {\r\n            dataField: 'voertuigsoort',\r\n            text: 'Type'\r\n        },\r\n        {\r\n            dataField: 'eerste_kleur',\r\n            text: 'Color'\r\n        },\r\n        {\r\n            dataField: 'aantal_zitplaatsen',\r\n            text: 'Number of seats'\r\n        },\r\n        {\r\n            dataField: 'catalogusprijs',\r\n            text: 'Catalog price'\r\n        },\r\n        {\r\n            dataField: 'image_url',\r\n            text: 'Image',\r\n            formatter: (cell, contact) => {\r\n                return (\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <a href={contact.image_url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <FontAwesomeIcon style={{color: '#000'}} icon={faLink} />\r\n                        </a>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const authHeader = () => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user && user.auth_token) {\r\n            setAuth({email: auth.email, password: auth.password, token: user.auth_token});\r\n            return { Authorization: 'Bearer ' + user.auth_token };\r\n        } else {\r\n            return {};\r\n        }\r\n    };\r\n\r\n    const login = (userCredentials) => {\r\n        return axios\r\n            .post(MOBILITY_LOGIN, userCredentials)\r\n            .then((response) => {\r\n              if (response.data.auth_token) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n              }\r\n              authHeader();\r\n              return response.data;\r\n            })\r\n            .catch(error => {\r\n              setHasError(true);\r\n            });\r\n    };\r\n\r\n    const getUpdatedVehicle = (imageUrl, plate) => {\r\n        const params = {\r\n            image_url: imageUrl\r\n        };\r\n\r\n        axios\r\n            .get(MOBILITY_SEARCH_PLATE+plate, {headers: authHeader()})\r\n            .then(({data}) => {\r\n                if(data){\r\n                    plateId = data.id;\r\n                    axios.put(MOBILITY_UPDATE+plateId, {vehicle: params},{headers: authHeader()})\r\n                        .then(() => {\r\n                            axios\r\n                                .get(MOBILITY_SEARCH_PLATE+plate, {headers: authHeader()})\r\n                                .then(({data}) => {\r\n                                    if(data){\r\n                                        data[\"id\"] = 0;\r\n                                        setConfig({\r\n                                            theData: [data],\r\n                                            filterString: config.filterString,\r\n                                            searchingState: true\r\n                                        });\r\n                                    }else{\r\n                                        setConfig({\r\n                                            theData: [],\r\n                                            filterString: config.filterString,\r\n                                            searchingState: config.searchingState\r\n                                        });\r\n                                    }\r\n                                });\r\n                        });\r\n                }else{\r\n                    setConfig({\r\n                        theData: [],\r\n                        filterString: config.filterString,\r\n                        searchingState: config.searchingState\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const callSearchEngine = (q) => {\r\n        const params={\r\n            cx: \"e36d1428dc503ed35\",\r\n            key :\"AIzaSyAnGrIDQeZF2AAxuuJejhonDo8_-cq_qks\",\r\n            q: q\r\n        };\r\n        axios\r\n            .get(\"https://www.googleapis.com/customsearch/v1\", {params})\r\n            .then(({data}) => {\r\n                if(data) {\r\n                    for( let item in data.items ){\r\n                        for( let key in Object.keys(data.items[item]) ){\r\n                            if( Object.keys(data.items[item])[key] === \"pagemap\"){\r\n                                if(data.items[item].pagemap.cse_image){\r\n                                    if(imageUrl.length === 0){\r\n                                        imageUrl = data.items[item].pagemap.cse_image[0].src;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    getUpdatedVehicle(imageUrl, config.filterString);\r\n                }\r\n            })\r\n    };\r\n\r\n    const searchVehicles = (params) => {\r\n        setConfig({\r\n            theData: [],\r\n            filterString: params.kenteken || '',\r\n            searchingState: true\r\n        });\r\n        axios\r\n            .get(MOBILITY_SEARCH, {params})\r\n            .then(({data}) => {\r\n                if(data) {\r\n                    if( data.length > 0 ) {\r\n                        const q = data[0].merk + \"+\" + data[0].handelsbenaming;\r\n                        callSearchEngine(q);\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    const searchVehiclesHandler = (filterString) => {\r\n        searchVehicles({kenteken: filterString})\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    }, []);\r\n\r\n  return (\r\n    <div className=\"mobility-page-container\">\r\n      {!hasError && <section className=\"content\">\r\n        <Container>\r\n          {auth.token.length === 0 && <Card>\r\n          <Card.Header>\r\n            <Row>\r\n              <Col><h3>Please login first!</h3></Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form>\r\n              <Form.Group controlId=\"mobilityLogin\">\r\n                <InputGroup size=\"sm\" className=\"mb-3\">\r\n                  <FormControl\r\n                      aria-label=\"email\"\r\n                      placeholder=\"Email\"\r\n                      onChange={(e)=>{\r\n                        if( e.currentTarget.value.charAt(0) === ' ' ){\r\n                          e.target.value = e.target.value.trim();\r\n                        }\r\n                        setAuth({email: e.currentTarget.value, password: auth.password, token: auth.token});\r\n                      }}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <InputGroup size=\"sm\" className=\"mb-3\">\r\n                  <FormControl\r\n                      aria-label=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={(e)=>{\r\n                        if( e.currentTarget.value.charAt(0) === ' ' ){\r\n                          e.target.value = e.target.value.trim();\r\n                        }\r\n                        setAuth({email: auth.email, password: e.currentTarget.value, token: auth.token});\r\n                      }}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                  block\r\n                  variant=\"primary\"\r\n                  disabled={auth.email.length === 0 || auth.password.length === 0}\r\n                  className={auth.email.length === 0 || auth.password.length === 0 ? 'custom-button disabled-input' : 'custom-button'}\r\n                  onClick={()=>{\r\n                    login(auth);\r\n                  }}\r\n              >Log in\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>}\r\n          {auth.token.length > 0 && <Card>\r\n            <Card.Header>\r\n                <h5>Search feature: please provide the licenseplate in order to perform the search.</h5>\r\n                <p>For example, you can search by: XXAAXX, RF661H, NL706S, WNVP76</p>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mt-0\">\r\n                            <FormControl\r\n                                placeholder=\"Search by licenseplate...\"\r\n                                value={config.filterString}\r\n                                onKeyPress={event => {\r\n                                    if (event.key === \"Enter\" && config.filterString.length>1) {\r\n                                        searchVehiclesHandler(config.filterString)\r\n                                    }\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    if( e.currentTarget.value.charAt(0) === ' ' ){\r\n                                        e.target.value = e.target.value.trim();\r\n                                    }\r\n                                    setConfig({\r\n                                        theData: config.theData,\r\n                                        filterString: e.target.value,\r\n                                        searchingState: config.searchingState\r\n                                    });\r\n                                }}\r\n                            />\r\n                            {config.filterString.length>0 && <InputGroup.Append>\r\n                                <Button\r\n                                    variant=\"light\"\r\n                                    className=\"clean-form-btn\"\r\n                                    onClick={(e) => {\r\n                                        e.currentTarget.parentElement.children[0].value = '';\r\n                                        setConfig({\r\n                                            theData: [],\r\n                                            filterString: '',\r\n                                            searchingState: config.searchingState\r\n                                        });\r\n                                    }}>\r\n                                    <FontAwesomeIcon style={{color: '#000'}} icon={faTimes} />\r\n                                </Button>\r\n                            </InputGroup.Append>}\r\n                            {config.filterString.length>0 && <InputGroup.Append>\r\n                                <Button\r\n                                    variant=\"light\"\r\n                                    onClick={() => {\r\n                                        searchVehiclesHandler(config.filterString)\r\n                                    }}\r\n                                >\r\n                                    <FontAwesomeIcon style={{color: '#000'}} icon={faSearch} />\r\n                                </Button>\r\n                            </InputGroup.Append>}\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {config.searchingState && <Col>\r\n                        {width > breakpoint ? <BootstrapTable\r\n                            keyField=\"id\"\r\n                            bootstrap4\r\n                            condensed\r\n                            data={config.theData}\r\n                            columns={columns}\r\n                            loading={true}\r\n                            noDataIndication={<div>Sorry! We found no data.</div>}\r\n                        />:<ResponsiveTable\r\n                            data={config.theData}\r\n                            columns={columns}\r\n                            filterString={config.filterString}\r\n                        />}\r\n                    </Col>}\r\n                </Row>\r\n              <Row>\r\n                <Button\r\n                    block\r\n                    variant=\"primary\"\r\n                    className=\"custom-button\"\r\n                    onClick={()=>{\r\n                      setAuth({email: \"\", password: \"\", token: auth.token});\r\n                      localStorage.removeItem(\"user\");\r\n                      setAuth({email: auth.email, password: auth.password, token: \"\"});\r\n                    }}\r\n                >Log out\r\n                </Button>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>}\r\n        </Container>\r\n      </section>}\r\n      {hasError && <Error origin=\"mobility\"/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mobility;\r\n","import React from \"react\";\r\nimport {Card, Container} from \"react-bootstrap\";\r\nimport \"./bookmarks.scss\";\r\n\r\nconst Bookmarks = (props) => {\r\n\r\n    let rows = [];\r\n    for(let i=0; i<=props.favs.length/3; i++){\r\n        rows.push(<div key={i}></div>)\r\n    }\r\n\r\n    return(<div className=\"bookmarks-page-container\">\r\n        <section className=\"content\">\r\n            <Container>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h3>Below are your bookmarks</h3>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"container\">\r\n                        {\r\n                            rows.map((item, index)=>(\r\n                                <div key={index} className=\"row text-center\">{\r\n                                    props.favs.filter((fav, favIndex)=>(favIndex>=index*3 && favIndex<index*3+3)).map((item, itemIndex)=>(\r\n                                        <div key={itemIndex} className=\"col-lg-4 mb-5 mb-lg-0 card bg-secondary text-white\">{item.title}</div>\r\n                                    ))\r\n                                }</div>\r\n                            ))\r\n                        }\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    </div>)\r\n};\r\n\r\nexport default Bookmarks;","export const schemaCollection = [\r\n    {\r\n        id: \"19-20\",\r\n        allowance: 12500,\r\n        basicIncomeMaxLimit: 50000,\r\n        highIncomeMaxLimit: 150000,\r\n        rates: [20, 40, 45],\r\n        allowanceLimit: 100000,\r\n        insurance: {\r\n            lowLimit: 12*719,\r\n            lowRate: 12,\r\n            highLimit: 12*4167,\r\n            highRate: 2\r\n        }\r\n    },\r\n    {\r\n        id: \"20-21\",\r\n        allowance: 12500,\r\n        basicIncomeMaxLimit: 50000,\r\n        highIncomeMaxLimit: 150000,\r\n        rates: [20, 40, 45],\r\n        allowanceLimit: 100000,\r\n        insurance: {\r\n            lowLimit: 12*792,\r\n            lowRate: 12,\r\n            highLimit: 12*4167,\r\n            highRate: 2\r\n        }\r\n    }\r\n];","import React, {useState} from \"react\";\r\nimport {Container, Card, Row, Col, Form, Button, InputGroup, Fade} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowRight, faArrowLeft} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NumberFormat from 'react-number-format';\r\nimport ViewItemModal from \"../../components/ViewItemModal/ViewItemModal\";\r\nimport {calculateTax} from \"../../core/helpers/taxCalculatorService\";\r\nimport {schemaCollection} from \"../../core/taxModel\";\r\nimport \"./tax.scss\";\r\n\r\nconst Tax = () => {\r\n\r\n    const [calculatedData, setCalculatedData] = useState({\r\n        taxes: \"\",\r\n        insuranceTaxes: \"\",\r\n        income: \"\",\r\n        initialAllowance: \"\",\r\n        allowance: \"\",\r\n        taxSplits: [],\r\n        insuranceSplits: \"\"\r\n    });\r\n    const [userData, setUserData] = useState({amount: \"\", year: \"\"});\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showFirstScreen, setShowFirstScreen] = useState(true);\r\n    const currency = {\r\n        pound: \"£\"\r\n    };\r\n    const displayConfig = [\r\n        {\r\n            label: \"Taxes per year\",\r\n            value: calculatedData.taxes,\r\n            customClass: \"\"\r\n        },\r\n        {\r\n            label: \"Insurance taxes per year\",\r\n            value: calculatedData.insuranceTaxes,\r\n            customClass: \"\"\r\n        },\r\n        {\r\n            label: \"Gross income per month\",\r\n            value: userData.amount/12,\r\n            customClass: \"\"\r\n        },\r\n        {\r\n            label: \"Net income per month\",\r\n            value: calculatedData.income/12,\r\n            customClass: \"income-per-month\"\r\n        },\r\n        {\r\n            label: \"Net income per year\",\r\n            value: calculatedData.income,\r\n            customClass: \"\"\r\n        },\r\n        {\r\n            label: \"Personal allowance\",\r\n            value: calculatedData.allowance,\r\n            customClass: \"\"\r\n        }\r\n    ];\r\n\r\n    const navigationButton = (direction) => (\r\n        <Card className=\"nav-button-card\">\r\n            <Button variant=\"btn-primary btn-circle btn-lg\"\r\n                    onClick={(e)=>{\r\n                        setShowFirstScreen(!showFirstScreen);\r\n                        e.currentTarget.parentElement.querySelector('.btn-circle').blur();\r\n                    }}\r\n            >\r\n                <h3>{showFirstScreen ? \"Click to see details\" : \"Back to main screen\"}</h3>\r\n                <FontAwesomeIcon className=\"nav-button-arrow\" style={{color: '#566573'}} icon={direction} />\r\n            </Button>\r\n        </Card>\r\n    );\r\n\r\n    return(<div className=\"tax-page-container\">\r\n        <section className=\"content\">\r\n            <Container>\r\n                <Card>\r\n                    <Card.Header className=\"text-center\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>Welcome to the tax calculator page</h3>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"d-flex flex-column\">\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                {calculatedData.income.toString().length>0 && !showFirstScreen &&\r\n                                    <div className=\"nav-button top\">\r\n                                        {navigationButton(faArrowLeft)}\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                            <Col md={8}>\r\n                                <Fade in={showFirstScreen}>\r\n                                    <div className={!showFirstScreen ? \"main-screen\" : \"\"}>\r\n                                        <h6>This widget will help you better project your monthly net income.</h6>\r\n                                        <p>To use this calculator you need to fill in the below two fields, representing the desired annual gross income and the fiscal year to refer the calculation.</p>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"incomeField\">\r\n                                                <InputGroup className=\"mb-2 mr-sm-2\">\r\n                                                    <Form.Control\r\n                                                        className=\"shadow-none\"\r\n                                                        type=\"number\"\r\n                                                        placeholder=\"Insert your income\"\r\n                                                        onChange={(e)=>{\r\n                                                            const string = e.currentTarget.value.toString();\r\n                                                            if( string.charAt(0) === \"0\" ) {\r\n                                                                e.currentTarget.value = string.substring(1,string.length);\r\n                                                            }\r\n                                                            if( string.length > 10 ) {\r\n                                                                e.currentTarget.value = string.substring(0,10);\r\n                                                            }\r\n                                                            setCalculatedData({income: \"\"});\r\n                                                            setUserData({\r\n                                                                amount: e.currentTarget.value,\r\n                                                                year: userData.year\r\n                                                            })\r\n                                                        }\r\n                                                        }\r\n                                                    />\r\n                                                    <InputGroup.Append>\r\n                                                        <InputGroup.Text>{currency.pound}</InputGroup.Text>\r\n                                                    </InputGroup.Append>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"yearField\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    className=\"shadow-none\"\r\n                                                    onChange={(e)=>{\r\n                                                        setCalculatedData({income: \"\"});\r\n                                                        setUserData({\r\n                                                            amount: userData.amount,\r\n                                                            year: e.currentTarget.value\r\n                                                        })\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    <option value=\"-\">Please select a year</option>\r\n                                                    <option value=\"19-20\">2019-2020</option>\r\n                                                    <option value=\"20-21\">2020-2021</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                className=\"button-calculate btn btn-primary btn-block shadow-none\"\r\n                                                onClick={(e) => {\r\n                                                    if( Number(userData.amount) === 0 || userData.year.length !== 5 ) {\r\n                                                        setShowModal(true);\r\n                                                    }else{\r\n                                                        const schema = schemaCollection.filter((item)=>(item.id.toString() === userData.year.toString())); // get the configuration object based on which we'll do the calculations\r\n                                                        setCalculatedData(calculateTax(schema[0], userData.amount)); // set the display configuration object with the calculated data\r\n                                                        e.currentTarget.parentElement.querySelector('.button-calculate').blur();\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <h3>Calculate</h3>\r\n                                            </Button>\r\n                                        </Form>\r\n                                        <div className=\"income-result text-center\">\r\n                                            {calculatedData.income.toString().length>0 && <Card>\r\n                                                {\r\n                                                    displayConfig.map((item, index)=>(\r\n                                                        <Row key={index} className={item.customClass}>\r\n                                                            <Col md={6}>\r\n                                                                <h6><small>{item.label}</small></h6>\r\n                                                            </Col>\r\n                                                            <Col md={6}>\r\n                                                                <h3>\r\n                                                                    <NumberFormat\r\n                                                                        value={Number(item.value).toFixed(2)}\r\n                                                                        displayType={'text'}\r\n                                                                        thousandSeparator={true}\r\n                                                                        prefix={currency.pound}\r\n                                                                    />\r\n                                                                </h3>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    ))\r\n                                                }\r\n                                            </Card>}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fade>\r\n                                <Fade in={!showFirstScreen}>\r\n                                    <div className={showFirstScreen ? \"second-screen\" : \"\"}>\r\n                                        <div className=\"income-result text-center\">\r\n                                            {calculatedData.income.toString().length>0 && <Card>\r\n                                                <Row className=\"details-item\">\r\n                                                    <Col md={12}>\r\n                                                        Below you can see the calculation scheme applied on your income\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>\r\n                                                        Gross salary per year:\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <NumberFormat\r\n                                                            value={Number(userData.amount).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>\r\n                                                        Personal allowance:\r\n                                                    </Col>\r\n                                                    <Col md={6}>\r\n                                                        <NumberFormat\r\n                                                            value={Number(calculatedData.initialAllowance).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        /> reduced to <NumberFormat\r\n                                                            value={Number(calculatedData.allowance).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row className=\"details-item\">\r\n                                                    <Col md={12}>\r\n                                                        Based on the existing laws, your gross income will be split into the following intervals. A different tax rate will then be applied on each interval\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>Amount/year</Col>\r\n                                                    <Col>Rate</Col>\r\n                                                    <Col>Value/year</Col>\r\n                                                </Row>\r\n                                                {calculatedData.taxSplits.map((item, index)=>(\r\n                                                    <Row key={index}>\r\n                                                        <Col>\r\n                                                            <NumberFormat\r\n                                                                value={Number(item.amount).toFixed(2)}\r\n                                                                displayType={'text'}\r\n                                                                thousandSeparator={true}\r\n                                                                prefix={currency.pound}\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col>{item.rate}%</Col>\r\n                                                        <Col>\r\n                                                            <NumberFormat\r\n                                                                value={Number(item.value).toFixed(2)}\r\n                                                                displayType={'text'}\r\n                                                                thousandSeparator={true}\r\n                                                                prefix={currency.pound}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))}\r\n                                                <Row className=\"details-item\">\r\n                                                    <Col md={12}>\r\n                                                        The calculation of the National Insurance is made by the below breakpoints\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>Amount/year</Col>\r\n                                                    <Col>Rate</Col>\r\n                                                    <Col>Value/year</Col>\r\n                                                </Row>\r\n                                                {calculatedData.insuranceSplits.map((item, index)=>(\r\n                                                    <Row key={index}>\r\n                                                        <Col>\r\n                                                            <NumberFormat\r\n                                                                value={Number(item.amount).toFixed(2)}\r\n                                                                displayType={'text'}\r\n                                                                thousandSeparator={true}\r\n                                                                prefix={currency.pound}\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col>{item.rate}%</Col>\r\n                                                        <Col>\r\n                                                            <NumberFormat\r\n                                                                value={Number(item.value).toFixed(2)}\r\n                                                                displayType={'text'}\r\n                                                                thousandSeparator={true}\r\n                                                                prefix={currency.pound}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))}\r\n                                                <Row className=\"details-item\">\r\n                                                    <Col md={12}>\r\n                                                        Resulting the below net income values\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>Yearly</Col>\r\n                                                    <Col md={6}>\r\n                                                        <strong><NumberFormat\r\n                                                            value={Number(calculatedData.income).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        /></strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>Monthly</Col>\r\n                                                    <Col md={6}>\r\n                                                        <strong><NumberFormat\r\n                                                            value={Number(calculatedData.income/12).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        /></strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>Weekly</Col>\r\n                                                    <Col md={6}>\r\n                                                        <strong><NumberFormat\r\n                                                            value={Number(calculatedData.income/52).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        /></strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={6}>Daily</Col>\r\n                                                    <Col md={6}>\r\n                                                        <strong><NumberFormat\r\n                                                            value={Number(calculatedData.income/261).toFixed(2)}\r\n                                                            displayType={'text'}\r\n                                                            thousandSeparator={true}\r\n                                                            prefix={currency.pound}\r\n                                                        /></strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Card>}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fade>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                {calculatedData.income.toString().length>0 &&\r\n                                    <div className={`nav-button bottom ${!showFirstScreen ? 'left' : 'right'}`}>\r\n                                        {navigationButton(!showFirstScreen ? faArrowLeft : faArrowRight)}\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        <ViewItemModal\r\n            index=\"0\"\r\n            data={{content: \"Please remember to provide values for both fields\"}}\r\n            show={showModal}\r\n            onHide={() => setShowModal(false)}\r\n        />\r\n    </div>)\r\n};\r\n\r\nexport default Tax;","export function breakdownIncome(schema, income, allowance) {\r\n    let splits = [];\r\n\r\n    if( income/schema.highIncomeMaxLimit > 1 ) {\r\n        splits[0] = income - schema.highIncomeMaxLimit;\r\n        splits[1] = schema.highIncomeMaxLimit - schema.basicIncomeMaxLimit + schema.allowance;\r\n        splits[2] = schema.basicIncomeMaxLimit - schema.allowance;\r\n    }else{\r\n        if( income/schema.basicIncomeMaxLimit > 1 ) {\r\n            if( income/schema.allowanceLimit > 1 ) {\r\n                splits[0] = income - schema.basicIncomeMaxLimit + schema.allowance - allowance;\r\n                splits[1] = schema.basicIncomeMaxLimit - schema.allowance;\r\n            }else{\r\n                splits[0] = income - schema.basicIncomeMaxLimit;\r\n                splits[1] = schema.basicIncomeMaxLimit - schema.allowance;\r\n            }\r\n        }else{\r\n            if( income/schema.allowance > 1 ) {\r\n                splits[0] = income - schema.allowance;\r\n            }else{\r\n                splits = [];\r\n            }\r\n        }\r\n    }\r\n    splits = splits.reverse();\r\n\r\n    return splits\r\n}\r\n\r\nexport function calculateTax(schema, income) {\r\n    let output,\r\n        allowance = schema.allowance,\r\n        insuranceTaxes = [],\r\n        taxes = 0,\r\n        getSplits,\r\n        taxSplits = [];\r\n\r\n    // calculate the allowance upon which I will set afterwards the income breakdown splits\r\n    if( income > schema.allowanceLimit) {\r\n        const diff = income - schema.allowanceLimit;\r\n        if( diff >= 2*allowance ) allowance = 0;\r\n        else allowance = schema.allowance - diff/2;\r\n    }\r\n\r\n    getSplits = breakdownIncome(schema, income, allowance);\r\n\r\n    // calculate the sum of all taxes applied on the income\r\n    if( getSplits.length > 0 ) {\r\n        taxSplits = getSplits.map((item, index) => schema.rates[index] / 100 * item); // get an array of tax values applied differently on each of the income breakdown\r\n        taxes = taxSplits.reduce((accumulator, currentValue) => accumulator + currentValue); // sum up all these taxes to get the total\r\n    }\r\n\r\n    // calculate insurance tax\r\n    if( income > schema.insurance.lowLimit ) {\r\n        if( income <= schema.insurance.highLimit ) {\r\n            insuranceTaxes = [{\r\n                amount: income - schema.insurance.lowLimit,\r\n                rate: schema.insurance.lowRate,\r\n                value: schema.insurance.lowRate/100 * ( income - schema.insurance.lowLimit )\r\n            }];\r\n        }else{\r\n            insuranceTaxes = [{\r\n                amount: schema.insurance.highLimit - schema.insurance.lowLimit,\r\n                rate: schema.insurance.lowRate,\r\n                value: schema.insurance.lowRate/100 * ( schema.insurance.highLimit - schema.insurance.lowLimit )\r\n            },\r\n            {\r\n                amount: income - schema.insurance.highLimit,\r\n                rate: schema.insurance.highRate,\r\n                value: schema.insurance.highRate/100 * ( income - schema.insurance.highLimit )\r\n            }]\r\n        }\r\n    }else{\r\n        insuranceTaxes = [{\r\n            amount: income,\r\n            rate: 0,\r\n            value: 0\r\n        }];\r\n    }\r\n\r\n    // calculate final income after applying insurance tax\r\n    output = income - taxes - insuranceTaxes.map((item)=>(item.value)).reduce((accumulator, currentValue) => accumulator + currentValue);\r\n\r\n    if( getSplits.length === 0 ) {\r\n        getSplits[0] = income;\r\n        taxSplits[0] = income;\r\n    }\r\n\r\n    return {\r\n        taxes: taxes,\r\n        insuranceTaxes: insuranceTaxes.map((item)=>(item.value)).reduce((accumulator, currentValue) => accumulator + currentValue),\r\n        income: output,\r\n        initialAllowance: schema.allowance,\r\n        allowance: allowance,\r\n        taxSplits: taxSplits.map((item, index)=>(\r\n            {\r\n                amount: getSplits[index],\r\n                rate: getSplits[index] <= schema.allowance ? 0 : schema.rates[index],\r\n                value: item\r\n            }\r\n        )),\r\n        insuranceSplits: insuranceTaxes\r\n    }\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Loading from \"../components/Loading/Loading\";\r\n\r\n\r\nconst ProtectedRoute = ({ component, ...args }) => (\r\n  <Route\r\n    component={withAuthenticationRequired(component, {\r\n      onRedirecting: () => <Loading />,\r\n    })}\r\n    {...args}\r\n  />\r\n);\r\n\r\nexport default ProtectedRoute;\r\n","import React, {createContext, useReducer} from \"react\";\r\nimport {Route, Switch, useHistory, useLocation, Redirect} from \"react-router-dom\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport {faHome, faUser, faSpaceShuttle, faBookmark, faCalculator, faSignOutAlt, faSignInAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Navbar from \"./components/Topbar/Topbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Loading from \"./components/Loading/Loading\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Home from \"./pages/Home/home\";\r\nimport Profile from \"./pages/Profile/profile\";\r\nimport Mobility from \"./pages/Mobility/mobility\";\r\nimport Bookmarks from \"./pages/Bookmarks/bookmarks\";\r\nimport Tax from \"./pages/Tax/tax\";\r\nimport ProtectedRoute from \"./auth/protected-route\";\r\nimport \"./App.scss\";\r\n\r\nexport const HomeContext = createContext();\r\nexport const SidebarContext = createContext();\r\n\r\n\r\nfunction setFavouritesReducer(state, item) {\r\n    return [...state, item]\r\n}\r\n\r\nfunction setCurrentLocationReducer(state, item) {\r\n    return item\r\n}\r\n\r\nconst App = () => {\r\n    const {isAuthenticated, isLoading} = useAuth0();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [favs, setFavs] = useReducer(setFavouritesReducer, []);\r\n    const [currentLocation, setCurrentLocation] = useReducer(setCurrentLocationReducer, \"\");\r\n\r\n    const navigationConfig = [\r\n        {\r\n            pageName: \"Home\",\r\n            icon: faHome,\r\n            show: true\r\n        },\r\n        {\r\n            pageName: \"Mobility\",\r\n            icon: faSpaceShuttle,\r\n            show: true\r\n        },\r\n        {\r\n            pageName: \"Profile\",\r\n            icon: faUser,\r\n            show: isAuthenticated\r\n        },\r\n        {\r\n            pageName: \"Bookmarks\",\r\n            icon: faBookmark,\r\n            show: true\r\n        },\r\n        {\r\n            pageName: \"Tax\",\r\n            icon: faCalculator,\r\n            show: true\r\n        },\r\n        {\r\n            pageName: \"Log-in-out\",\r\n            icon: isAuthenticated ? faSignOutAlt : faSignInAlt,\r\n            show: true\r\n        }\r\n    ];\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return (\r\n        <HomeContext.Provider value={{favs, setFavs}}>\r\n            <div id=\"body-row\" className=\"row no-gutters\">\r\n                <div className=\"col-sm-1\">\r\n                    <SidebarContext.Provider value={{currentLocation, setCurrentLocation}}>\r\n                        <Sidebar location={location} history={history} config={navigationConfig}/>\r\n                    </SidebarContext.Provider>\r\n                </div>\r\n                <div className=\"col-sm-11\">\r\n                    <Navbar location={location} currentLocation={currentLocation} history={history} config={navigationConfig}/>\r\n                    <main role=\"main\" className=\"container-fluid flex-grow-1 overflow-auto\">\r\n                        <Switch>\r\n                            <Route path=\"/\"\r\n                                   exact\r\n                                   render={() => <Redirect to=\"/home\" />}/>\r\n                            <Route path=\"/home\" component={Home} />\r\n                            <ProtectedRoute path=\"/profile\" component={Profile} />\r\n                            <Route path=\"/mobility\" component={Mobility} />\r\n                            <Route path=\"/bookmarks\"\r\n                                   render={() => <Bookmarks favs={favs} />}\r\n                            />\r\n                            <Route path=\"/tax\" component={Tax} />\r\n                        </Switch>\r\n                    </main>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </HomeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0Component = ({ children }) => {\r\n    const history = useHistory();\r\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n    const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\r\n\r\n    const onRedirectCallback = (appState) => {\r\n        history.push(appState?.returnTo || window.location.pathname);\r\n    };\r\n\r\n    return (\r\n        <Auth0Provider\r\n            domain={domain}\r\n            clientId={clientId}\r\n            redirectUri={window.location.origin}\r\n            onRedirectCallback={onRedirectCallback}\r\n            audience={audience}\r\n        >\r\n            {children}\r\n        </Auth0Provider>\r\n    );\r\n};\r\n\r\nexport default Auth0Component;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Auth0Component from \"./auth/auth0-component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Auth0Component>\r\n            <App />\r\n        </Auth0Component>\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}